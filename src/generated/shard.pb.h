/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_SHARD_PB_H_INCLUDED
#define PB_SHARD_PB_H_INCLUDED
#include <pb.h>
#include "utilities/uuidv4.pb.h"
#include "utilities/version.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* *
 Shard: information about an executable script. */
typedef struct _Shard {
    bool has_id;
    UUIDv4 id;
    bool has_version;
    Version version;
    /* the source code encoded in utf-8
 optionally minified */
    pb_callback_t source;
} Shard;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Shard_init_default                       {false, UUIDv4_init_default, false, Version_init_default, {{NULL}, NULL}}
#define Shard_init_zero                          {false, UUIDv4_init_zero, false, Version_init_zero, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define Shard_id_tag                             1
#define Shard_version_tag                        2
#define Shard_source_tag                         3

/* Struct field encoding specification for nanopb */
#define Shard_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  id,                1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  version,           2) \
X(a, CALLBACK, SINGULAR, BYTES,    source,            3)
#define Shard_CALLBACK pb_default_field_callback
#define Shard_DEFAULT NULL
#define Shard_id_MSGTYPE UUIDv4
#define Shard_version_MSGTYPE Version

extern const pb_msgdesc_t Shard_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Shard_fields &Shard_msg

/* Maximum encoded size of messages (where known) */
/* Shard_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
