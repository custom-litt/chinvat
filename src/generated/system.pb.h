/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_SYSTEM_SYSTEM_PB_H_INCLUDED
#define PB_SYSTEM_SYSTEM_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* *
 UUIDv4: A universally unique identifier. */
typedef struct _System_UUIDv4 {
    uint64_t upper;
    uint64_t lower;
} System_UUIDv4;

/* *
 Version: Version information compliant with Semantic Versioning 2.0.0
 https://semver.org/ */
typedef struct _System_Version {
    uint32_t major;
    uint32_t minor;
    uint32_t patch;
    pb_callback_t prerelease;
    pb_callback_t build;
} System_Version;

/* *
 HardwareInfo: Information about the hardware. */
typedef struct _System_HardwareInfo {
    /* unique id for the hardware, used to locate updates */
    bool has_id;
    System_UUIDv4 id;
    pb_callback_t name;
    bool has_version;
    System_Version version;
} System_HardwareInfo;

/* *
 FirmwareInfo: Information about the firmware. */
typedef struct _System_FirmwareInfo {
    /* unique id for the firmware, used to locate updates */
    bool has_id;
    System_UUIDv4 id;
    pb_callback_t name;
    bool has_version;
    System_Version version;
    pb_callback_t hash;
} System_FirmwareInfo;

/* *
 NetworkInfo: Information about the network connection. */
typedef struct _System_NetworkInfo {
    /* the name used to identify the access point */
    pb_callback_t ssid;
    /* the password used to connect to the access point
 when used for configuration this field missing will indicate an open network
 this field will not be sent when the system state is reported */
    pb_callback_t password;
    /* represents connection status state or requests
 0: disconnected
 1: connected
 2: request connection activation
 3: request connection shutdown
 others: reserved */
    uint32_t state;
    /* ip address
 the ip address version can be found depending on the length of this field
 length 4 bytes: IPv4
 length 16 bytes: IPv6 */
    pb_callback_t ipaddr;
} System_NetworkInfo;

/* *
 IdentityInfo: Identifying information about the device. */
typedef struct _System_SystemInfo_IdentityInfo {
    /* unique identifier */
    pb_callback_t id;
    /* human-readable identifier, not necessarily unique */
    pb_callback_t name;
} System_SystemInfo_IdentityInfo;

/* *
 SystemInfo: Identifying information about the device. */
typedef struct _System_SystemInfo {
    bool has_identity;
    System_SystemInfo_IdentityInfo identity;
    bool has_hardware;
    System_HardwareInfo hardware;
    bool has_firmware;
    System_FirmwareInfo firmware;
    bool has_network;
    System_NetworkInfo network;
} System_SystemInfo;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define System_UUIDv4_init_default               {0, 0}
#define System_Version_init_default              {0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define System_HardwareInfo_init_default         {false, System_UUIDv4_init_default, {{NULL}, NULL}, false, System_Version_init_default}
#define System_FirmwareInfo_init_default         {false, System_UUIDv4_init_default, {{NULL}, NULL}, false, System_Version_init_default, {{NULL}, NULL}}
#define System_NetworkInfo_init_default          {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define System_SystemInfo_init_default           {false, System_SystemInfo_IdentityInfo_init_default, false, System_HardwareInfo_init_default, false, System_FirmwareInfo_init_default, false, System_NetworkInfo_init_default}
#define System_SystemInfo_IdentityInfo_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define System_UUIDv4_init_zero                  {0, 0}
#define System_Version_init_zero                 {0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define System_HardwareInfo_init_zero            {false, System_UUIDv4_init_zero, {{NULL}, NULL}, false, System_Version_init_zero}
#define System_FirmwareInfo_init_zero            {false, System_UUIDv4_init_zero, {{NULL}, NULL}, false, System_Version_init_zero, {{NULL}, NULL}}
#define System_NetworkInfo_init_zero             {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define System_SystemInfo_init_zero              {false, System_SystemInfo_IdentityInfo_init_zero, false, System_HardwareInfo_init_zero, false, System_FirmwareInfo_init_zero, false, System_NetworkInfo_init_zero}
#define System_SystemInfo_IdentityInfo_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define System_UUIDv4_upper_tag                  1
#define System_UUIDv4_lower_tag                  2
#define System_Version_major_tag                 1
#define System_Version_minor_tag                 2
#define System_Version_patch_tag                 3
#define System_Version_prerelease_tag            4
#define System_Version_build_tag                 5
#define System_HardwareInfo_id_tag               1
#define System_HardwareInfo_name_tag             2
#define System_HardwareInfo_version_tag          3
#define System_FirmwareInfo_id_tag               1
#define System_FirmwareInfo_name_tag             2
#define System_FirmwareInfo_version_tag          3
#define System_FirmwareInfo_hash_tag             4
#define System_NetworkInfo_ssid_tag              1
#define System_NetworkInfo_password_tag          2
#define System_NetworkInfo_state_tag             3
#define System_NetworkInfo_ipaddr_tag            4
#define System_SystemInfo_IdentityInfo_id_tag    1
#define System_SystemInfo_IdentityInfo_name_tag  2
#define System_SystemInfo_identity_tag           1
#define System_SystemInfo_hardware_tag           2
#define System_SystemInfo_firmware_tag           3
#define System_SystemInfo_network_tag            4

/* Struct field encoding specification for nanopb */
#define System_UUIDv4_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   upper,             1) \
X(a, STATIC,   SINGULAR, UINT64,   lower,             2)
#define System_UUIDv4_CALLBACK NULL
#define System_UUIDv4_DEFAULT NULL

#define System_Version_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   major,             1) \
X(a, STATIC,   SINGULAR, UINT32,   minor,             2) \
X(a, STATIC,   SINGULAR, UINT32,   patch,             3) \
X(a, CALLBACK, SINGULAR, STRING,   prerelease,        4) \
X(a, CALLBACK, SINGULAR, STRING,   build,             5)
#define System_Version_CALLBACK pb_default_field_callback
#define System_Version_DEFAULT NULL

#define System_HardwareInfo_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  id,                1) \
X(a, CALLBACK, SINGULAR, STRING,   name,              2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  version,           3)
#define System_HardwareInfo_CALLBACK pb_default_field_callback
#define System_HardwareInfo_DEFAULT NULL
#define System_HardwareInfo_id_MSGTYPE System_UUIDv4
#define System_HardwareInfo_version_MSGTYPE System_Version

#define System_FirmwareInfo_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  id,                1) \
X(a, CALLBACK, SINGULAR, STRING,   name,              2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  version,           3) \
X(a, CALLBACK, SINGULAR, STRING,   hash,              4)
#define System_FirmwareInfo_CALLBACK pb_default_field_callback
#define System_FirmwareInfo_DEFAULT NULL
#define System_FirmwareInfo_id_MSGTYPE System_UUIDv4
#define System_FirmwareInfo_version_MSGTYPE System_Version

#define System_NetworkInfo_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   ssid,              1) \
X(a, CALLBACK, SINGULAR, STRING,   password,          2) \
X(a, STATIC,   SINGULAR, UINT32,   state,             3) \
X(a, CALLBACK, SINGULAR, BYTES,    ipaddr,            4)
#define System_NetworkInfo_CALLBACK pb_default_field_callback
#define System_NetworkInfo_DEFAULT NULL

#define System_SystemInfo_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  identity,          1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  hardware,          2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  firmware,          3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  network,           4)
#define System_SystemInfo_CALLBACK NULL
#define System_SystemInfo_DEFAULT NULL
#define System_SystemInfo_identity_MSGTYPE System_SystemInfo_IdentityInfo
#define System_SystemInfo_hardware_MSGTYPE System_HardwareInfo
#define System_SystemInfo_firmware_MSGTYPE System_FirmwareInfo
#define System_SystemInfo_network_MSGTYPE System_NetworkInfo

#define System_SystemInfo_IdentityInfo_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    id,                1) \
X(a, CALLBACK, SINGULAR, STRING,   name,              2)
#define System_SystemInfo_IdentityInfo_CALLBACK pb_default_field_callback
#define System_SystemInfo_IdentityInfo_DEFAULT NULL

extern const pb_msgdesc_t System_UUIDv4_msg;
extern const pb_msgdesc_t System_Version_msg;
extern const pb_msgdesc_t System_HardwareInfo_msg;
extern const pb_msgdesc_t System_FirmwareInfo_msg;
extern const pb_msgdesc_t System_NetworkInfo_msg;
extern const pb_msgdesc_t System_SystemInfo_msg;
extern const pb_msgdesc_t System_SystemInfo_IdentityInfo_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define System_UUIDv4_fields &System_UUIDv4_msg
#define System_Version_fields &System_Version_msg
#define System_HardwareInfo_fields &System_HardwareInfo_msg
#define System_FirmwareInfo_fields &System_FirmwareInfo_msg
#define System_NetworkInfo_fields &System_NetworkInfo_msg
#define System_SystemInfo_fields &System_SystemInfo_msg
#define System_SystemInfo_IdentityInfo_fields &System_SystemInfo_IdentityInfo_msg

/* Maximum encoded size of messages (where known) */
/* System_Version_size depends on runtime parameters */
/* System_HardwareInfo_size depends on runtime parameters */
/* System_FirmwareInfo_size depends on runtime parameters */
/* System_NetworkInfo_size depends on runtime parameters */
/* System_SystemInfo_size depends on runtime parameters */
/* System_SystemInfo_IdentityInfo_size depends on runtime parameters */
#define System_UUIDv4_size                       22

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
