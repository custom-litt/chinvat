/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_UTILITIES_VARIABLE_PB_H_INCLUDED
#define PB_UTILITIES_VARIABLE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* a boolean choice */
typedef struct _Variable_Boolean {
    bool value;
    bool initial;
    pb_callback_t true_val;
    pb_callback_t false_val;
} Variable_Boolean;

/* inclusive range type for integers */
typedef struct _Variable_Integer_Range {
    int32_t min;
    int32_t max;
} Variable_Integer_Range;

/* an integer
 optionally existing within some range [min, max] */
typedef struct _Variable_Integer {
    int32_t value;
    int32_t initial;
    /* default range to display */
    bool has_default_range;
    Variable_Integer_Range default_range;
    /* optional, an allowed range */
    bool has_allowed_range;
    Variable_Integer_Range allowed_range;
} Variable_Integer;

/* inclusive range type for floating point variables */
typedef struct _Variable_Double_Range {
    double min;
    double max;
} Variable_Double_Range;

/* a floating point value
 optionally existing within some range [min, max] */
typedef struct _Variable_Double {
    double value;
    double initial;
    /* default range to display */
    bool has_default_range;
    Variable_Double_Range default_range;
    /* optional, an allowed range */
    bool has_allowed_range;
    Variable_Double_Range allowed_range;
} Variable_Double;

/* selection of a string option */
typedef struct _Variable_Option {
    uint32_t value;
    uint32_t initial;
    /* the available options
 values are selected by index */
    pb_callback_t options;
} Variable_Option;

/* *
 Variable: Defines parameters of a variable.
 Allows exposition of variables at runtime. */
typedef struct _Variable {
    pb_callback_t name;
    pb_callback_t description;
    /* the type of the variable (required)
 key:
   0: boolean
   1: integer
   2: double (floating point)
   3: option (single selection) */
    uint32_t type;
    bool has_boolean_var;
    Variable_Boolean boolean_var;
    bool has_integer_var;
    Variable_Integer integer_var;
    bool has_double_var;
    Variable_Double double_var;
    bool has_option_var;
    Variable_Option option_var;
} Variable;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Variable_init_default                    {{{NULL}, NULL}, {{NULL}, NULL}, 0, false, Variable_Boolean_init_default, false, Variable_Integer_init_default, false, Variable_Double_init_default, false, Variable_Option_init_default}
#define Variable_Boolean_init_default            {0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define Variable_Integer_init_default            {0, 0, false, Variable_Integer_Range_init_default, false, Variable_Integer_Range_init_default}
#define Variable_Integer_Range_init_default      {0, 0}
#define Variable_Double_init_default             {0, 0, false, Variable_Double_Range_init_default, false, Variable_Double_Range_init_default}
#define Variable_Double_Range_init_default       {0, 0}
#define Variable_Option_init_default             {0, 0, {{NULL}, NULL}}
#define Variable_init_zero                       {{{NULL}, NULL}, {{NULL}, NULL}, 0, false, Variable_Boolean_init_zero, false, Variable_Integer_init_zero, false, Variable_Double_init_zero, false, Variable_Option_init_zero}
#define Variable_Boolean_init_zero               {0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define Variable_Integer_init_zero               {0, 0, false, Variable_Integer_Range_init_zero, false, Variable_Integer_Range_init_zero}
#define Variable_Integer_Range_init_zero         {0, 0}
#define Variable_Double_init_zero                {0, 0, false, Variable_Double_Range_init_zero, false, Variable_Double_Range_init_zero}
#define Variable_Double_Range_init_zero          {0, 0}
#define Variable_Option_init_zero                {0, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define Variable_Boolean_value_tag               1
#define Variable_Boolean_initial_tag             2
#define Variable_Boolean_true_val_tag            3
#define Variable_Boolean_false_val_tag           4
#define Variable_Integer_Range_min_tag           1
#define Variable_Integer_Range_max_tag           2
#define Variable_Integer_value_tag               1
#define Variable_Integer_initial_tag             2
#define Variable_Integer_default_range_tag       4
#define Variable_Integer_allowed_range_tag       5
#define Variable_Double_Range_min_tag            1
#define Variable_Double_Range_max_tag            2
#define Variable_Double_value_tag                1
#define Variable_Double_initial_tag              2
#define Variable_Double_default_range_tag        4
#define Variable_Double_allowed_range_tag        5
#define Variable_Option_value_tag                1
#define Variable_Option_initial_tag              2
#define Variable_Option_options_tag              3
#define Variable_name_tag                        1
#define Variable_description_tag                 2
#define Variable_type_tag                        3
#define Variable_boolean_var_tag                 4
#define Variable_integer_var_tag                 5
#define Variable_double_var_tag                  6
#define Variable_option_var_tag                  7

/* Struct field encoding specification for nanopb */
#define Variable_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, CALLBACK, SINGULAR, STRING,   description,       2) \
X(a, STATIC,   SINGULAR, UINT32,   type,              3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  boolean_var,       4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  integer_var,       5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  double_var,        6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  option_var,        7)
#define Variable_CALLBACK pb_default_field_callback
#define Variable_DEFAULT NULL
#define Variable_boolean_var_MSGTYPE Variable_Boolean
#define Variable_integer_var_MSGTYPE Variable_Integer
#define Variable_double_var_MSGTYPE Variable_Double
#define Variable_option_var_MSGTYPE Variable_Option

#define Variable_Boolean_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     value,             1) \
X(a, STATIC,   SINGULAR, BOOL,     initial,           2) \
X(a, CALLBACK, SINGULAR, STRING,   true_val,          3) \
X(a, CALLBACK, SINGULAR, STRING,   false_val,         4)
#define Variable_Boolean_CALLBACK pb_default_field_callback
#define Variable_Boolean_DEFAULT NULL

#define Variable_Integer_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    value,             1) \
X(a, STATIC,   SINGULAR, INT32,    initial,           2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  default_range,     4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  allowed_range,     5)
#define Variable_Integer_CALLBACK NULL
#define Variable_Integer_DEFAULT NULL
#define Variable_Integer_default_range_MSGTYPE Variable_Integer_Range
#define Variable_Integer_allowed_range_MSGTYPE Variable_Integer_Range

#define Variable_Integer_Range_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    min,               1) \
X(a, STATIC,   SINGULAR, INT32,    max,               2)
#define Variable_Integer_Range_CALLBACK NULL
#define Variable_Integer_Range_DEFAULT NULL

#define Variable_Double_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   value,             1) \
X(a, STATIC,   SINGULAR, DOUBLE,   initial,           2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  default_range,     4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  allowed_range,     5)
#define Variable_Double_CALLBACK NULL
#define Variable_Double_DEFAULT NULL
#define Variable_Double_default_range_MSGTYPE Variable_Double_Range
#define Variable_Double_allowed_range_MSGTYPE Variable_Double_Range

#define Variable_Double_Range_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   min,               1) \
X(a, STATIC,   SINGULAR, DOUBLE,   max,               2)
#define Variable_Double_Range_CALLBACK NULL
#define Variable_Double_Range_DEFAULT NULL

#define Variable_Option_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   value,             1) \
X(a, STATIC,   SINGULAR, UINT32,   initial,           2) \
X(a, CALLBACK, REPEATED, STRING,   options,           3)
#define Variable_Option_CALLBACK pb_default_field_callback
#define Variable_Option_DEFAULT NULL

extern const pb_msgdesc_t Variable_msg;
extern const pb_msgdesc_t Variable_Boolean_msg;
extern const pb_msgdesc_t Variable_Integer_msg;
extern const pb_msgdesc_t Variable_Integer_Range_msg;
extern const pb_msgdesc_t Variable_Double_msg;
extern const pb_msgdesc_t Variable_Double_Range_msg;
extern const pb_msgdesc_t Variable_Option_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Variable_fields &Variable_msg
#define Variable_Boolean_fields &Variable_Boolean_msg
#define Variable_Integer_fields &Variable_Integer_msg
#define Variable_Integer_Range_fields &Variable_Integer_Range_msg
#define Variable_Double_fields &Variable_Double_msg
#define Variable_Double_Range_fields &Variable_Double_Range_msg
#define Variable_Option_fields &Variable_Option_msg

/* Maximum encoded size of messages (where known) */
/* Variable_size depends on runtime parameters */
/* Variable_Boolean_size depends on runtime parameters */
/* Variable_Option_size depends on runtime parameters */
#define Variable_Double_Range_size               18
#define Variable_Double_size                     58
#define Variable_Integer_Range_size              22
#define Variable_Integer_size                    70

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
